name: Build EPUB and Release

on:
  push: # Esegue l'action su ogni commit
    branches:
      - "**"
    tags:
      - "*" # Esegue l'action anche su qualsiasi tag
  repository_dispatch:
  workflow_dispatch:
    inputs:
      do_release:
        type: choice
        description: "Esegui la release?"
        required: true
        options:
          - "true"
          - "false"
        default: "false"
      release_tag:
        type: "string"
        description: "Tag o nome della release (opzionale, se vuoto usa quello del repo clonato)"
        required: false
        default: ""
      release_notes:
        type: "string"
        description: "Note di rilascio (opzionale)"
        required: false
        default: ""

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo book-epub
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.4"

      - name: Clone book repo
        run: |
          git clone https://github.com/Il-Libro-Open-Source/book.git /tmp/book

      - name: Get latest tag from book repo
        id: book_tag
        run: |
          cd /tmp/book
          echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Build EPUB
        env:
          INPUT: /tmp/book
          OUTPUT: ${{ github.workspace }}/il-manuale-del-buon-dev.epub
          UUID: f9298b0f-bea1-4cb6-a601-2a35027bd44e
        run: |
          go build -o ./epub-generator ./src
          ./epub-generator

      - name: Upload EPUB as artifact
        uses: actions/upload-artifact@v4
        with:
          name: il-manuale-del-buon-dev
          path: ${{ github.workspace }}/il-manuale-del-buon-dev.epub

      - name: Create GitHub Release (solo se richiesto da workflow_dispatch)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.do_release == 'true' && (github.event.inputs.release_tag != '' || steps.book_tag.outputs.tag != '')
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: ${{ github.event.inputs.release_notes == '' }}
          makeLatest: true
          tag: ${{ github.event.inputs.release_tag != '' && github.event.inputs.release_tag || steps.book_tag.outputs.tag }}
          artifacts: ${{ github.workspace }}/il-manuale-del-buon-dev.epub
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ github.event.inputs.release_notes }}
